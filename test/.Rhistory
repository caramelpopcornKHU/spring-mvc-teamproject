data <- read.csv("D:/spring-project-workspace/test/spike/spike_result_ubi.csv")
data_filtered <- data[-1, ]
# 1. diff_ms를 숫자로 변환 (혹시 아직 안 했으면)
data_filtered$diff_ms <- as.numeric(as.character(data_filtered$diff_ms))
# 2. 이상치 제거 (IQR 기준)
Q1 <- quantile(data_filtered$diff_ms, 0.25, na.rm = TRUE)
Q3 <- quantile(data_filtered$diff_ms, 0.75, na.rm = TRUE)
IQR <- Q3 - Q1
lower_bound <- Q1 - 1.5 * IQR
upper_bound <- Q3 + 1.5 * IQR
# 3. 이상치 제외한 데이터 생성
filtered_values <- data_filtered$diff_ms[data_filtered$diff_ms >= lower_bound & data_filtered$diff_ms <= upper_bound]
# 4. 히스토그램 그리기
hist(filtered_values,
main = "Ubiaccess of diff_ms (Outliers Removed)",
xlab = "Time Difference (ms)",
col = "skyblue",
border = "white")
data <- read.csv("D:/spring-project-workspace/test/spike/spike_result_SB.csv")
data_filtered <- data[-1, ]
# 1. diff_ms를 숫자로 변환 (혹시 아직 안 했으면)
data_filtered$diff_ms <- as.numeric(as.character(data_filtered$diff_ms))
# 2. 이상치 제거 (IQR 기준)
Q1 <- quantile(data_filtered$diff_ms, 0.25, na.rm = TRUE)
Q3 <- quantile(data_filtered$diff_ms, 0.75, na.rm = TRUE)
IQR <- Q3 - Q1
lower_bound <- Q1 - 1.5 * IQR
upper_bound <- Q3 + 1.5 * IQR
# 3. 이상치 제외한 데이터 생성
filtered_values <- data_filtered$diff_ms[data_filtered$diff_ms >= lower_bound & data_filtered$diff_ms <= upper_bound]
# 4. 히스토그램 그리기
hist(filtered_values,
main = "SpringBoot of diff_ms (Outliers Removed)",
xlab = "Time Difference (ms)",
col = "skyblue",
border = "white")
data1 <- read.csv("D:/spring-project-workspace/test/spike/spike_result_ubi.csv")
data2 <- read.csv("D:/spring-project-workspace/test/spike/spike_result_SB.csv")
data_filtered1 <- data1[-1, ]
data_filtered2 <- data2[-1, ]
# 1. diff_ms를 숫자로 변환 (혹시 아직 안 했으면)
data_filtered1$diff_ms <- as.numeric(as.character(data_filtered1$diff_ms))
# 1. diff_ms를 숫자로 변환 (혹시 아직 안 했으면)
data_filtered2$diff_ms <- as.numeric(as.character(data_filtered2$diff_ms))
# 두 그룹 간의 t-검정 수행 (Welch's t-test - 기본값)
t.test(data_filtered1$diff_ms, data_filtered2$diff_ms)
